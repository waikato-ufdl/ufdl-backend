# Generated by Django 2.2.6 on 2019-11-11 21:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ufdl_core_app.models._OrganisationInferable


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('deletion_time', models.DateTimeField(default=None, editable=False, null=True)),
                ('permissions', models.CharField(choices=[('R', 'Read'), ('W', 'Write'), ('A', 'Admin')], default='R', max_length=1)),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(ufdl_core_app.models._OrganisationInferable.OrganisationInferable, models.Model),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('deletion_time', models.DateTimeField(default=None, editable=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='organisations', through='ufdl_core_app.Membership', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(ufdl_core_app.models._OrganisationInferable.OrganisationInferable, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('deletion_time', models.DateTimeField(default=None, editable=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='projects', to='ufdl_core_app.Organisation')),
            ],
            bases=(ufdl_core_app.models._OrganisationInferable.OrganisationInferable, models.Model),
        ),
        migrations.AddField(
            model_name='membership',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='memberships', to='ufdl_core_app.Organisation'),
        ),
        migrations.AddField(
            model_name='membership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('deletion_time', models.DateTimeField(default=None, editable=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('version', models.IntegerField(default=1)),
                ('licence', models.CharField(default='proprietary', max_length=200)),
                ('is_public', models.BooleanField(default=False)),
                ('tags', models.TextField()),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='datasets', to='ufdl_core_app.Project')),
            ],
            bases=(ufdl_core_app.models._OrganisationInferable.OrganisationInferable, models.Model),
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(condition=models.Q(deletion_time__isnull=True), fields=('name', 'organisation'), name='unique_active_project_names_per_organisation'),
        ),
        migrations.AddConstraint(
            model_name='organisation',
            constraint=models.UniqueConstraint(condition=models.Q(deletion_time__isnull=True), fields=('name',), name='unique_active_organisation_names'),
        ),
        migrations.AddConstraint(
            model_name='membership',
            constraint=models.UniqueConstraint(condition=models.Q(deletion_time__isnull=True), fields=('user', 'organisation'), name='one_active_membership_per_user_per_organisation'),
        ),
        migrations.AddConstraint(
            model_name='dataset',
            constraint=models.UniqueConstraint(fields=('name', 'version', 'project'), name='unique_project_versions'),
        ),
    ]
