{
  "name": "yolo_v5_objectdetection-predict",
  "version": 1,
  "description": "TODO",
  "scope": "public",
  "domain": "od",
  "licence": "Apache 2.0",
  "specific": {
    "job_type": "Predict<Domain<'Object Detection'>, Framework<'yolo', 'v5'>>",
    "executor_class": "ufdl.joblauncher.objdet.yolov5.ObjectDetectionPredict_Yolo_v5",
    "required_packages": "git+https://github.com/waikato-ufdl/ufdl-job-launcher-plugins.git",
    "parameters": {
      "dataset_options": {
        "types": ["Array<str>", "str"],
        "default": ["to-images-od"],
        "help": "Options to the dataset input"
      },
      "docker_image": {
        "types": [
          "Name<DockerImage<Domain<'Object Detection'>, Framework<'yolo', 'v5'>>>",
          "PK<DockerImage<Domain<'Object Detection'>, Framework<'yolo', 'v5'>>>",
          "DockerImage<Domain<'Object Detection'>, Framework<'yolo', 'v5'>>"
        ],
        "help": "The docker image to use"
      },
      "clear_dataset": {
        "types": ["bool"],
        "default": false,
        "help": "If enabled, any meta-data or predictions get removed from the dataset beforehand."
      },
      "store_predictions": {
        "types": ["bool"],
        "default": false,
        "help": "If enabled, the predictions get stored back in the dataset that they were generated for."
      },
      "confidence_scores": {
        "types": ["Array<str>"],
        "default": ["ufdl.joblauncher.objdet.confidence.Common"],
        "help": "The semicolon-separated list of classes for calculating confidence scores, which get stored back in the meta-data of the image."
      },
      "image_size": {
        "types": ["int"],
        "default": 416,
        "help": "The size to scale the images to."
      },
      "unlabelled": {
        "types": ["Array<str>"],
        "default": ["every:1"],
        "help": "Unlabelled frames to extract from videos for prediction."
      },
      "body": {
        "types": ["Array<str>", "str"],
        "default": [
          "# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]",
          "path: /data # dataset root dir",
          "train: images/train  # train images (relative to 'path')",
          "val: images/val  # val images (relative to 'path')",
          "test: images/test # test images (optional)",
          "",
          "# Classes",
          "nc: ${num-classes}  # number of classes",
          "names: ${classes}",
          ""
        ],
        "help": "The body of the function"
      }
    }
  }
}
