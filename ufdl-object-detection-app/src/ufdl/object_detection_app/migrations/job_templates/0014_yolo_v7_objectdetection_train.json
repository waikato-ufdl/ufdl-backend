{
  "name": "yolo_v7_objectdetection-train",
  "version": 1,
  "description": "TODO",
  "scope": "public",
  "domain": "od",
  "licence": "Apache 2.0",
  "specific": {
    "job_type": "Train<Domain<'Object Detection'>, Framework<'yolo', 'v7'>>",
    "executor_class": "ufdl.joblauncher.objdet.yolov7.ObjectDetectionTrain_Yolo_v7",
    "required_packages": "git+https://github.com/waikato-ufdl/ufdl-job-launcher-plugins.git",
    "parameters": {
      "dataset_options": {
        "types": ["Array<str>", "str"],
        "default": [
          "to-yolo-od",
          "-o", ".",
          "--labels", "./labels.txt",
          "--labels-csv", "./labels.csv",
          "--split-names", "train", "test", "val",
          "--split-ratios", "70", "15", "15"
        ],
        "help": "Options to the dataset input"
      },
      "docker_image": {
        "types": [
          "Name<DockerImage<Domain<'Object Detection'>, Framework<'yolo', 'v7'>>>",
          "PK<DockerImage<Domain<'Object Detection'>, Framework<'yolo', 'v7'>>>",
          "DockerImage<Domain<'Object Detection'>, Framework<'yolo', 'v7'>>"
        ],
        "help": "The docker image to use"
      },
      "image_size": {
        "types": ["int"],
        "default": 416,
        "help": "The size to scale the images to."
      },
      "epochs": {
        "types": ["int"],
        "default": 20,
        "help": "The number of epochs to train for."
      },
      "pretrained_model": {
        "types": [
          "Name<PretrainedModel<Domain<'Object Detection'>, Framework<'yolo', 'v7'>>>",
          "PK<PretrainedModel<Domain<'Object Detection'>, Framework<'yolo', 'v7'>>>"
        ],
        "default": "yolov7_v0.1",
        "help": "The pretrained model to use."
      },
      "body": {
        "types": ["Array<str>", "str"],
        "default": [
          "# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]",
          "path: /data # dataset root dir",
          "train: images/train  # train images (relative to 'path')",
          "val: images/val  # val images (relative to 'path')",
          "test: images/test # test images (optional)",
          "",
          "# Classes",
          "nc: ${num-classes}  # number of classes",
          "names: ${classes}",
          ""
        ],
        "help": "The body of the function"
      }
    }
  }
}
